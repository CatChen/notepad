<!DOCTYPE HTML>
<html>
<head>
	<meta charset="UTF-8">
	<title>Notepad</title>
	<script type="text/javascript" src="javascripts/jquery-1.7.1.js"></script>
	<script type="text/javascript" src="javascripts/underscore.js"></script>
	<script type="text/javascript" src="javascripts/backbone.js"></script>
	<script type="text/javascript" src="javascripts/polyfill.js"></script>
	<script type="text/javascript" src="javascripts/models.js"></script>
	<script type="text/javascript">
$(function() {
    var FileView = window.FileView = Backbone.View.extend({
        tagName: 'li',
        template: _.template($('#fileViewTemplate').html()),
        events: {
            'click li': 'open'
        },
        initialize: function() {
            this.model.bind('change', this.render, this);
            this.model.bind('destroy', this.$el.remove, this.$el);
        },
        render: function() {
            this.$el.html(this.template(this.model.toJSON()));
        },
        open: function() {
            console.log('opening file:');
            console.log(this.model.toJSON());
        }
    });

    var FileListView = window.FileListView = Backbone.View.extend({
        initialize: function() {
        },
        render: function() {

        }
    });

    var fileList = new FileListView({
        el: $('#fileList'),
        model: root
    });
});
	</script>
	<script type="text/javascript">
/* temporarily disabled sync */
Backbone.sync = function(method, model, options) {
    switch (method) {
    case "read":
        resp = model.id ? store.find(model) : store.findAll();
        break;
    case "create":
        resp = store.create(model);
        break;
    case "update":
        resp = store.update(model);
        break;
    case "delete":
        resp = store.destroy(model);
        break;
    }

  if (resp) {
    options.success(resp);
  } else {
    options.error("Record not found");
  }
};

root.create({
    name: 'test1.txt',
    size: 12,
    date: new Date(),
    content: 'Hello, world'
})
root.create({
    name: 'test2.txt',
    size: 12,
    date: new Date(),
    content: 'Hello, world'
})
root.create({
    name: 'test3.txt',
    size: 12,
    date: new Date(),
    content: 'Hello, world'
})
root.create({
    name: 'test4.txt',
    size: 12,
    date: new Date(),
    content: 'Hello, world'
})
	</script>
	<script type="text/javascript">
$(function() {
    /* data transfer property is needed in drag and drop events */
    $.event.props.push('dataTransfer');
    
    $('.dropZone').on('dragover', function(e) {
        e.stopPropagation();
        e.preventDefault();
        
        e.dataTransfer.dropEffect = 'copy';
    });
    
    $('.dropZone').on('drop', function(e) {
        if (e.dataTransfer.files.length === 0) {
            /* stop file drop handling when there is no file */
            return;
        }
        
        e.stopPropagation();
        e.preventDefault();
        
        var files = e.dataTransfer.files;
        for (var i = 0, l = files.length; i < l; i++) {
            (function(file) {
                console.log(file);
                var reader = new FileReader();
                
                reader.readAsText(file);
                
                reader.onload = function(e) {
                    console.log(e.target.result);
                    
                    root.add({
                        name: file.name,
                        size: file.size,
                        date: file.lastModifiedDate.getTime(),
                        content: e.target.result
                    });
                    
                    $('#editor').val(e.target.result);
                };
                
                reader.onerror = function(e) {
                    console.log('file reading error');
                    console.log(e);
                    console.log(file);
                };
                
                reader.onprogress = function(e) {
                    console.log('file reading progress');
                    console.log(e.loaded / e.total);
                };
            })(files[i]);
        }
    });
    
    $('#save').on('click', function(e) {
        if ($(this).attr('href') === '###') {
            e.stopPropagation();
            e.preventDefault();

            var builder = new BlobBuilder();
            builder.append($('#editor').val());
            var blob = builder.getBlob();
            var dataURL = URL.createObjectURL(blob);
            var clickEvent = document.createEvent("MouseEvent");
            clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
            $(this).attr('href', dataURL);
            this.dispatchEvent(clickEvent);
            
            setTimeout(function() {
                URL.revokeObjectURL(dataURL);
                $('#save').attr('href', '###');
            }, 0);
        }
    });
});
	</script>
	<script id="fileViewTemplate" type="text/template">
        <li title="<%=date%>"><%=name%></li>
	</script>
</head>
<body>
    <ul id="fileList" class="dropZone"></ul>
    <ul id="tabList">
        <!--
        <li id="tab_{{cid}}">{{name}}</li>
        -->
    </ul>
    <div id="editors">
        <!--
        <textarea id="editor_{{cid}}" class="editor"></textarea>
        -->
    </div>
	<!--<a id="save" href="###" download="test.txt">Save</a>-->
</body>
</html>
